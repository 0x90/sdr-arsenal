/*
 * Generated by asn1c-0.9.24 (http://lionet.info/asn1c)
 * From ASN.1 module "EUTRA-RRC-Definitions"
 * 	found in "36331-c10.asn"
 * 	`asn1c -S /usr/local/share/asn1c -fcompound-names -fskeletons-copy -gen-PER`
 */

#ifndef	_SystemInformationBlockType2_H_
#define	_SystemInformationBlockType2_H_


#include <asn_application.h>

/* Including external dependencies */
#include "RadioResourceConfigCommonSIB.h"
#include "UE-TimersAndConstants.h"
#include "TimeAlignmentTimer.h"
#include <OCTET_STRING.h>
#include <BOOLEAN.h>
#include <constr_SEQUENCE.h>
#include "ARFCN-ValueEUTRA.h"
#include <NativeEnumerated.h>
#include "AdditionalSpectrumEmission.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum SystemInformationBlockType2__freqInfo__ul_Bandwidth {
	SystemInformationBlockType2__freqInfo__ul_Bandwidth_n6	= 0,
	SystemInformationBlockType2__freqInfo__ul_Bandwidth_n15	= 1,
	SystemInformationBlockType2__freqInfo__ul_Bandwidth_n25	= 2,
	SystemInformationBlockType2__freqInfo__ul_Bandwidth_n50	= 3,
	SystemInformationBlockType2__freqInfo__ul_Bandwidth_n75	= 4,
	SystemInformationBlockType2__freqInfo__ul_Bandwidth_n100	= 5
} e_SystemInformationBlockType2__freqInfo__ul_Bandwidth;

/* Forward declarations */
struct MBSFN_SubframeConfigList;
struct AC_BarringConfig;

/* SystemInformationBlockType2 */
typedef struct SystemInformationBlockType2 {
	struct SystemInformationBlockType2__ac_BarringInfo {
		BOOLEAN_t	 ac_BarringForEmergency;
		struct AC_BarringConfig	*ac_BarringForMO_Signalling	/* OPTIONAL */;
		struct AC_BarringConfig	*ac_BarringForMO_Data	/* OPTIONAL */;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ac_BarringInfo;
	RadioResourceConfigCommonSIB_t	 radioResourceConfigCommon;
	UE_TimersAndConstants_t	 ue_TimersAndConstants;
	struct SystemInformationBlockType2__freqInfo {
		ARFCN_ValueEUTRA_t	*ul_CarrierFreq	/* OPTIONAL */;
		long	*ul_Bandwidth	/* OPTIONAL */;
		AdditionalSpectrumEmission_t	 additionalSpectrumEmission;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} freqInfo;
	struct MBSFN_SubframeConfigList	*mbsfn_SubframeConfigList	/* OPTIONAL */;
	TimeAlignmentTimer_t	 timeAlignmentTimerCommon;
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	OCTET_STRING_t	*lateNonCriticalExtension	/* OPTIONAL */;
	struct AC_BarringConfig	*ssac_BarringForMMTEL_Voice_r9	/* OPTIONAL */;
	struct AC_BarringConfig	*ssac_BarringForMMTEL_Video_r9	/* OPTIONAL */;
	struct AC_BarringConfig	*ac_BarringForCSFB_r10	/* OPTIONAL */;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} SystemInformationBlockType2_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_ul_Bandwidth_10;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_SystemInformationBlockType2;

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "MBSFN-SubframeConfigList.h"
#include "AC-BarringConfig.h"

#endif	/* _SystemInformationBlockType2_H_ */
#include <asn_internal.h>
